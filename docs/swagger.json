{
  "openapi": "3.0.0",
  "info": {
    "title": "Wallet API",
    "description": "Documentation for the Wallet API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API endpoints related to user management."
    },
    {
      "name": "Transactions",
      "description": "API endpoints related to transaction management."
    }
  ],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },

    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },

      "Transaction": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "isIncome": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          }
        }
      },

      "ValidationError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },

      "Error": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          },
          "param": {
            "type": "string"
          }
        }
      }
    }
  },

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login an existing user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },

    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get profile of authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "Logout authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          }
        }
      }
    },

    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create a new transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },

    "/transactions/{id}": {
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete transaction by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of transaction to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },

    "/transactions/{month}/{year}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Filter transactions by month and year",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "description": "Month to filter by (1-12)"
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "description": "Year to filter by (4 digit)"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions filtered successfully"
          },
          "400": {
            "description": "Invalid filter parameters"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
